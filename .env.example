# Environment Configuration for LARP Manager Server
# Copy this file to .env and modify the values as needed

# =============================================================================
# Application Settings
# =============================================================================

# Project name
PROJECT_NAME="LARP Manager Server"

# Environment (development, staging, production, testing)
ENVIRONMENT=development

# Debug mode (true/false)
DEBUG=true

# API version prefix
API_V1_PREFIX=/api/v1

# =============================================================================
# Database Configuration
# =============================================================================

# Database connection URL
# Format: postgresql+asyncpg://user:password@host:port/database
DATABASE_URL=postgresql+asyncpg://postgres:postgres@localhost:5432/larp_manager_db

# Database connection pool settings
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=0
DATABASE_POOL_TIMEOUT=30
DATABASE_POOL_RECYCLE=1800

# =============================================================================
# Security Settings (Placeholders for Phase 2)
# =============================================================================

# Secret key for JWT tokens (change this in production!)
SECURITY_SECRET_KEY=your-secret-key-here-change-in-production

# JWT algorithm
SECURITY_ALGORITHM=HS256

# Token expiration times (in minutes for access, days for refresh)
SECURITY_ACCESS_TOKEN_EXPIRE_MINUTES=30
SECURITY_REFRESH_TOKEN_EXPIRE_DAYS=30

# =============================================================================
# Logging Configuration
# =============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log format (json, text)
LOG_FORMAT=json

# =============================================================================
# CORS Settings
# =============================================================================

# Allowed origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# Allow credentials
CORS_ALLOW_CREDENTIALS=true

# Allowed methods (comma-separated, or * for all)
CORS_ALLOW_METHODS=*

# Allowed headers (comma-separated, or * for all)
CORS_ALLOW_HEADERS=*

# =============================================================================
# Development Settings
# =============================================================================

# Set to true for development features
DEV_MODE=true

# Database initialization settings
DB_INIT_RESET=false
DB_INIT_SKIP_MIGRATIONS=false
DB_INIT_SKIP_DEV_DATA=false

# =============================================================================
# Docker Settings
# =============================================================================

# PostgreSQL Docker settings
POSTGRES_DB=larp_manager_db
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres

# pgAdmin Docker settings
PGADMIN_DEFAULT_EMAIL=admin@larp-manager.com
PGADMIN_DEFAULT_PASSWORD=admin

# =============================================================================
# Testing Settings
# =============================================================================

# Test database URL (used when ENVIRONMENT=testing)
TEST_DATABASE_URL=postgresql+asyncpg://postgres:postgres@localhost:5432/larp_manager_test_db

# =============================================================================
# Future Features (Placeholders)
# =============================================================================

# Redis settings (for future caching implementation)
REDIS_URL=redis://localhost:6379
REDIS_DB=0

# Email settings (for future notification implementation)
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USERNAME=your-email@gmail.com
EMAIL_PASSWORD=your-app-password
EMAIL_FROM=noreply@larp-manager.com

# File upload settings (for future file handling)
MAX_FILE_SIZE=10485760  # 10MB
UPLOAD_DIR=uploads/
ALLOWED_FILE_EXTENSIONS=.jpg,.jpeg,.png,.gif,.pdf,.doc,.docx

# =============================================================================
# Monitoring and Observability (Placeholders)
# =============================================================================

# Sentry DSN (for error tracking)
SENTRY_DSN=

# OpenTelemetry settings
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4318
OTEL_SERVICE_NAME=larp-manager-server
OTEL_ENVIRONMENT=development

# =============================================================================
# Production Settings
# =============================================================================

# When deploying to production, make sure to:
# 1. Set ENVIRONMENT=production
# 2. Set DEBUG=false
# 3. Generate a secure SECRET_KEY
# 4. Use a production database URL
# 5. Configure proper CORS_ORIGINS
# 6. Set up proper logging
# 7. Configure monitoring and alerting

# Example production database URL (DO NOT USE IN DEVELOPMENT):
# DATABASE_URL=postgresql+asyncpg://username:password@prod-db-host:5432/larp_manager_prod

# Example production secret key generation (Python):
# import secrets
# print(secrets.token_urlsafe(32))

# =============================================================================
# Notes
# =============================================================================

# - All boolean values should be lowercase (true/false)
# - Database URLs should include the async driver (+asyncpg)
# - Secret keys should be at least 32 characters long
# - In production, use environment variables instead of .env files
# - Never commit .env files to version control
# - Use different databases for development, testing, and production